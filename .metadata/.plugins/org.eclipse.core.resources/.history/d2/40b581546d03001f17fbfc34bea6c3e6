package com.shopmmt.admin.services.impl;

import java.util.List;
import java.util.NoSuchElementException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.shopmmt.admin.exception.UserNotFoundException;
import com.shopmmt.admin.repositories.UserRepository;
import com.shopmmt.admin.services.UserService;
import com.shopmmt.common.dto.UserDTO;
import com.shopmmt.common.entity.User;
import com.shopmmt.common.validate.ValidateCommon;

import jakarta.validation.Valid;

@Service("userService")
public class UserServiceImpl implements UserService {
	
	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	private PasswordEncoder passwordEncoder;

	@Override
	public List<User> listAll() {
		return userRepository.findAll();
	}

	@Override
	public void save(@Valid UserDTO userDTO) {
		encodePassword(userDTO);
		User user = new User(userDTO);
		userRepository.save(user);
	}
	
	private void encodePassword(UserDTO userDTO) {
		String encodedPassword = passwordEncoder.encode(userDTO.getPassword());
		userDTO.setPassword(encodedPassword);
	}

	@Override
	public boolean isEmailUnique(String email) {
		User user = userRepository.findByEmail(email);
		return user == null;
	}

	@Override
	public User findById(String id) throws UserNotFoundException {
		try {
			if (!ValidateCommon.isValidStringIntegerNumber(id)) {
				throw new UserNotFoundException("Could not find any user with ID " + id);
			} else {
				return userRepository.findById(Integer.valueOf(id)).get();
			}
		} catch (NoSuchElementException e) {
			throw new UserNotFoundException("Could not find any user with ID " + id);
		}
	}
}
